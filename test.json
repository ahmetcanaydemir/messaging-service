{
  "openapi": "3.0.0",
  "paths": {
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "Create new user.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginRegisterPayload" } } }
        },
        "responses": {
          "201": { "description": "The user has successfully registered." },
          "400": { "description": "Username and/or password not entered." },
          "409": { "description": "Username already taken." }
        },
        "tags": ["auth"]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Get JWT token for given credentials.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginRegisterPayload" } } }
        },
        "responses": {
          "200": {
            "description": "Successful login.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "userId": { "type": "string" }, "accessToken": { "type": "string" } }
                }
              }
            }
          },
          "401": { "description": "Invalid username or password." }
        },
        "tags": ["auth"]
      }
    },
    "/messages": {
      "get": {
        "operationId": "MessageController_getAllMessages",
        "summary": "Get all messages of authenticated user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of messages of between authenticated user and other users.",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/MessageResponse" } }
              }
            }
          },
          "401": { "description": "Unauthorized access." }
        },
        "tags": ["messages"],
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "MessageController_sendMessage",
        "summary": "Send message from authenticated user to given user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SendMessagePayload" } } }
        },
        "responses": {
          "200": {
            "description": "Message sended successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "613a29143f3ee85b7b4ad9e1",
                  "description": "Id of the newly created message."
                }
              }
            }
          },
          "403": { "description": "Authenticated user blocked by receiver user." },
          "404": { "description": "Receiver username not found in DB." }
        },
        "tags": ["messages"],
        "security": [{ "bearer": [] }]
      }
    },
    "/messages/{username}": {
      "get": {
        "operationId": "MessageController_getMessagesWithUser",
        "summary": "Get messages between authenticated user and given user",
        "parameters": [{ "name": "username", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "List of messages of between authenticated user and given user.",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/MessageResponse" } }
              }
            }
          },
          "401": { "description": "Unauthorized access." }
        },
        "tags": ["messages"],
        "security": [{ "bearer": [] }]
      }
    },
    "/user/block/{username}": {
      "patch": {
        "operationId": "UserController_blockUser",
        "summary": "Block given username for messaging to authenticated user.",
        "parameters": [{ "name": "username", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "The user has successfully blocked." },
          "401": { "description": "Unauthorized access." },
          "404": { "description": "The user to block not exists in DB." }
        },
        "tags": ["user"],
        "security": [{ "bearer": [] }]
      }
    }
  },
  "info": { "title": "Messaging Service", "description": "API for messaging service", "version": "1.0", "contact": {} },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": { "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" } },
    "schemas": {
      "LoginRegisterPayload": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "example": "gandalf" },
          "password": { "type": "string", "example": "123" }
        },
        "required": ["username", "password"]
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "613a29143f3ee85b7b4ad9e1" },
          "message": { "type": "string", "example": "hello, how are u?" },
          "sender": { "type": "string", "example": "gandalf" },
          "receiver": { "type": "string", "example": "yoda" },
          "createdAt": { "type": "string", "example": "2021-09-09T16:48:22.208Z" }
        },
        "required": ["id", "message", "sender", "receiver", "createdAt"]
      },
      "SendMessagePayload": {
        "type": "object",
        "properties": {
          "receiver": { "type": "string", "example": "yoda" },
          "message": { "type": "string", "example": "hello, how are u?" }
        },
        "required": ["receiver", "message"]
      }
    }
  }
}
